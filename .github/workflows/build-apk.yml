name: Build Signed Release APK

on:
  workflow_dispatch:  # Run manually from the GitHub Actions tab

jobs:
  build-release:
    name: Build and Upload Signed APK
    runs-on: ubuntu-latest
    env:
      TOMTOM_API_KEY: ${{ secrets.TOMTOM_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      # üîê Decode release keystore
      - name: Decode Release Keystore
        env:
          SIGNING_KEYSTORE_BASE64: ${{ secrets.SIGNING_KEYSTORE_BASE64 }}
        run: echo "$SIGNING_KEYSTORE_BASE64" | base64 --decode > app/release-keystore.jks

      # üî• Restore google-services.json (Firebase configuration)
      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: |
          if [ -n "$GOOGLE_SERVICES" ]; then
            echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          else
            echo "::error::GOOGLE_SERVICES secret is not set. google-services.json will not be created."
          fi

      # üó∫Ô∏è Validate TOMTOM_API_KEY exists (for map features)
      - name: Validate TOMTOM_API_KEY
        run: |
          if [ -z "$TOMTOM_API_KEY" ]; then
            echo "::error::TOMTOM_API_KEY secret is not set"
            exit 1
          fi

      - name: Build Signed Release APK
        env:
          SIGNING_KEYSTORE_FILE: release-keystore.jks
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew assembleRelease

      # üì¶ Upload the signed APK as an artifact
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: UniverseApp-Release-APK
          path: app/build/outputs/apk/release/app-release.apk
