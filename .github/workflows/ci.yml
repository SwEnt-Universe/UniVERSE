name: CI - Test Runner

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TOMTOM_API_KEY: ${{ secrets.TOMTOM_API_KEY }}
    outputs:
      skip: ${{ steps.skip-heavy.outputs.skip }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - uses: gradle/actions/setup-gradle@v3
      - run: chmod +x ./gradlew
      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: |
          if [ -n "$GOOGLE_SERVICES" ]; then
            echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          fi
      - name: Validate TOMTOM_API_KEY
        run: test -n "$TOMTOM_API_KEY"
      - name: KTFmt Check
        run: ./gradlew ktfmtCheck
      - name: Detect [Docs]-only changes
        id: skip-heavy
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          if [[ "$TITLE" == *"[Docs]"* || "$TITLE" == *"[docs]"* ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi
      - name: Assemble + Unit Tests
        if: steps.skip-heavy.outputs.skip != 'true'
        run: ./gradlew assembleDebug testDebugUnitTest --build-cache


  connected-tests-A:
    needs: build
    if: needs.build.outputs.skip != 'true'
    runs-on: ubuntu-latest
    env:
      TOMTOM_API_KEY: ${{ secrets.TOMTOM_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm install -g firebase-tools
      - uses: gradle/actions/setup-gradle@v3

      # Cache AVD (API 30)
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-30

      - name: Create AVD snapshot (if cache miss)
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          force-avd-creation: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          disable-animations: false
          script: echo "Generated snapshot for cache."

      - name: Start Firebase emulators
        run: |
          nohup firebase emulators:start --only auth,firestore --project demo-project > firebase-emulator.log 2>&1 &
          sleep 20

      - name: Run Connected Tests (Suite A)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          disable-animations: true
          script: ./gradlew connectedSuiteAConnectedCheck --build-cache

      - name: Upload Firebase Emulator Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: firebase-emulator-logs-suiteA
          path: firebase-emulator.log


  connected-tests-B:
    needs: build
    if: needs.build.outputs.skip != 'true'
    runs-on: ubuntu-latest
    env:
      TOMTOM_API_KEY: ${{ secrets.TOMTOM_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm install -g firebase-tools
      - uses: gradle/actions/setup-gradle@v3

      # Reuse AVD cache
      - uses: actions/cache@v4
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-30

      - name: Start Firebase emulators
        run: |
          nohup firebase emulators:start --only auth,firestore --project demo-project > firebase-emulator.log 2>&1 &
          sleep 20

      - name: Run Connected Tests (Suite B)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          disable-animations: true
          script: ./gradlew connectedSuiteBConnectedCheck --build-cache

      - name: Upload Firebase Emulator Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: firebase-emulator-logs-suiteB
          path: firebase-emulator.log


  report:
    needs: [connected-tests-A, connected-tests-B]
    if: needs.build.outputs.skip != 'true'
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      TOMTOM_API_KEY: ${{ secrets.TOMTOM_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/setup-gradle@v3
      - run: ./gradlew jacocoTestReport --build-cache
      - run: ./gradlew sonar --parallel --build-cache
