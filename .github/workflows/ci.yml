name: CI - Test Runner

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      TOMTOM_API_KEY: ${{ secrets.TOMTOM_API_KEY }}

    steps:
      # ------------------ 📦 Checkout ------------------
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # ------------------ ⚙️ System Setup ------------------
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # ------------------ 💾 Gradle Cache ------------------
      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v3

      # ------------------ 🧱 Build Output Cache ------------------
      - name: Cache Gradle build outputs
        uses: actions/cache@v4
        with:
          path: |
            app/build
            .gradle
          key: build-${{ github.ref_name }}
          restore-keys: |
            build-

      # ------------------ 🧰 AVD Setup ------------------
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-34
          restore-keys: |
            avd-

      - name: Create AVD snapshot (if cache miss)
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      # ------------------ 🔐 Secrets ------------------
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: |
          if [ -n "$GOOGLE_SERVICES" ]; then
            echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          else
            echo "::warning::GOOGLE_SERVICES secret not set."
          fi

      - name: Validate TOMTOM_API_KEY
        run: |
          if [ -z "$TOMTOM_API_KEY" ]; then
            echo "::error::TOMTOM_API_KEY secret is not set"
            exit 1
          fi

            # ------------------ 🧹 Code Quality ------------------
      - name: KTFmt Check
        run: ./gradlew ktfmtCheck

      # ------------------ 🚪 Skip heavy tasks for [Docs] PRs ------------------
      - name: Detect [Docs]-only changes
        id: skip-heavy
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          echo "PR title: $TITLE"
          if [[ "$TITLE" == *"[Docs]"* || "$TITLE" == *"[docs]"* ]]; then
            echo "📝 [Docs] detected → skipping build, tests, and Sonar steps"
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "skip=false" >> $GITHUB_ENV
          fi

      # ------------------ 🔨 Build & Lint ------------------
      - name: Assemble Debug APK (PRs only)
        if: github.event_name == 'pull_request' && env.skip != 'true'
        run: ./gradlew assembleDebug --build-cache

      - name: Assemble + Lint (main branch)
        if: github.ref == 'refs/heads/main' && env.skip != 'true'
        run: ./gradlew assembleDebug lintDebug --build-cache

      # ------------------ 🧪 Unit Tests ------------------
      - name: Run unit tests
        if: env.skip != 'true'
        run: ./gradlew testDebugUnitTest --build-cache

      # ------------------ 🔥 Firebase Emulators ------------------
      - name: Start Firebase emulators
        if: env.skip != 'true'
        run: |
          if [ -e "firebase.json" ] && jq -e '.emulators' firebase.json >/dev/null; then
            nohup firebase emulators:start --only auth,firestore --project demo-project > firebase-emulator.log 2>&1 &
            sleep 20
          fi

      # ------------------ 🧠 Decide test target ------------------
      - name: Determine test suite
        if: env.skip != 'true'
        id: select-tests
        run: |
          EVENT_NAME="${{ github.event_name }}"
          REF="${{ github.ref }}"
          TITLE="${{ github.event.pull_request.title }}"
          echo "Event: $EVENT_NAME"
          echo "Ref: $REF"
          echo "PR title: $TITLE"

          if [[ "$EVENT_NAME" == "push" && "$REF" == "refs/heads/main" ]]; then
            echo "mode=connectedCheck" >> $GITHUB_ENV
            echo "➡️ Main branch → full connectedCheck"
          elif [[ "$TITLE" == *"[Profile]"* ]]; then
            echo "mode=ProfileRelatedConnectedCheck" >> $GITHUB_ENV
            echo "🧩 [Profile] detected → profile suite only"
          else
            echo "mode=connectedCheck" >> $GITHUB_ENV
            echo "🧪 Default → full connectedCheck"
          fi

      # ------------------ 📱 Run instrumentation tests ------------------
      - name: Run instrumentation tests (${{ env.mode }})
        if: env.skip != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -skin 1080x2400
          disable-animations: true
          script: ./gradlew ${{ env.mode }} --build-cache

      # ------------------ 📈 Coverage + Sonar ------------------
      - name: Generate JaCoCo Coverage Report
        if: env.skip != 'true'
        run: ./gradlew jacocoTestReport --build-cache

      - name: Upload report to SonarCloud
        if: env.skip != 'true'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --parallel --build-cache

